box: golang

# You can also use services such as databases. Read more on our dev center:
# http://devcenter.wercker.com/docs/services/index.html
# services:
    # - postgres
    # http://devcenter.wercker.com/docs/services/postgresql.html

    # - mongo
    # http://devcenter.wercker.com/docs/services/mongodb.html
build:
  # The steps that will be executed on build
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # http://devcenter.wercker.com/docs/steps/index.html
  steps:
    # Sets the go workspace and places you package
    # at the right place in the workspace tree
    - setup-go-workspace:
        package-dir: github.com/westwind027/pipeline


    # Gets the dependencies
    - script:
        name: env
        code: env

    - script:
        name: go get
        code: |
          
          cd $WERCKER_SOURCE_DIR
          go version
          go get -u github.com/Masterminds/glide
          export PATH=$WERCKER_SOURCE_DIR/bin:$PATH
          cd $WERCKER_SOURCE_DIR/../../Masterminds/glide
          glide install
          cd $WERCKER_SOURCE_DIR


    # Build the project
    - script:
        name: go build
        code: |
          go build

    # Test the project
    - script:
        name: go test
        code: |
          go test -v $(glide novendor)

    - script:
        name: copy files to wercker output
        code: |
          cp -R ./ $WERCKER_OUTPUT_DIR

deploy: 
  steps:
    - internal/docker-push:
        username: $USERNAME
        password: $PASSWORD 
        cmd: /pipeline/source/pipeline
        tag: latest
        repository: westwind027/pipeline



